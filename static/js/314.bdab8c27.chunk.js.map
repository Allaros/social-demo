{"version":3,"file":"static/js/314.bdab8c27.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Users/Users.module.scss?b204","webpack://my-app/./src/components/Users/User/User.module.scss?c19e","components/Users/User/User.jsx","webpack://my-app/./src/components/Common/Pagination/Pagination.module.scss?d5e3","components/Common/Pagination/Pagination.jsx","components/Users/Users.jsx","redux/selectors/users-selectors.js","components/Users/UsersContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"users\":\"Users_users__EY53i\",\"users__pagination\":\"Users_users__pagination__p0q0U\",\"users__title\":\"Users_users__title__tXMd5\",\"users__searchBlock\":\"Users_users__searchBlock__S99xI\",\"users__search\":\"Users_users__search__h6Qwz\",\"users__content\":\"Users_users__content__Bwn7a\",\"users__list\":\"Users_users__list__dLIf+\",\"users__top\":\"Users_users__top__hQ-bd\",\"button\":\"Users_button__pirgN\",\"hideButton\":\"Users_hideButton__F4Z8x\",\"active\":\"Users_active__FC1Gn\"};","// extracted by mini-css-extract-plugin\nexport default {\"user\":\"User_user__4jIvZ\",\"user__picture\":\"User_user__picture__k2KAK\",\"user__name\":\"User_user__name__JTvuV\",\"user__status\":\"User_user__status__riRet\",\"user__descriptionBlock\":\"User_user__descriptionBlock__VT7iV\",\"button\":\"User_button__ftXzi\",\"follow\":\"User_follow__7xdUJ\"};","import classes from './User.module.scss';\r\nimport Button from '../../Common/Button/Button';\r\nimport { NavLink } from 'react-router';\r\n\r\nexport default function User({ id, avatar, name, status, toggleFollow, followed, followingInLoad }) {\r\n   return (\r\n      <li className={classes.user}>\r\n         <div className={classes.user__visual}>\r\n            <div className={classes.user__picture}>\r\n               <NavLink to={`/profile/${id}`}>\r\n                  <img src={avatar} alt=\"avatar\" />\r\n               </NavLink>\r\n            </div>\r\n         </div>\r\n         <div className={classes.user__description}>\r\n            <div className={classes.user__descriptionBlock}>\r\n               <p className={classes.user__name}>{name}</p>\r\n               {!!status ? <p className={classes.user__status}>{status}</p> : null}\r\n            </div>\r\n         </div>\r\n         <Button\r\n            onClick={() => toggleFollow(id, followed)}\r\n            disabled={followingInLoad.some((userId) => userId === id)}\r\n            class={`${classes.button} ${followed ? classes.follow : ''}`}\r\n         >\r\n            {followed ? 'Отписаться' : 'Подписаться'}\r\n         </Button>\r\n      </li>\r\n   );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"pageButton\":\"Pagination_pageButton__yUGvW\",\"active\":\"Pagination_active__Vv2CZ\",\"selectedPage\":\"Pagination_selectedPage__dCWA6\",\"pagination\":\"Pagination_pagination__-gcMp\",\"pagination__pages\":\"Pagination_pagination__pages__zXlib\"};","import React from \"react\";\r\nimport classes from \"./Pagination.module.scss\";\r\n\r\nconst Pagination = ({\r\n   updateUsersPage,\r\n   currentPage,\r\n   pagesCount,\r\n   paginationLength = 10,\r\n}) => {\r\n   let pages = [];\r\n   for (let i = 1; i <= pagesCount; i++) {\r\n      pages.push(i);\r\n   }\r\n   let portionSize = paginationLength;\r\n   let portionCount = Math.ceil(pagesCount / portionSize);\r\n   let currentPortion = Math.ceil(currentPage / portionSize);\r\n\r\n   let leftPortionPageNumber = (currentPortion - 1) * portionSize + 1;\r\n   let rightPortionPageNumber = currentPortion * portionSize;\r\n   if (rightPortionPageNumber > pagesCount) {\r\n      rightPortionPageNumber = pagesCount;\r\n   }\r\n\r\n   return (\r\n      <div className={classes.pagination}>\r\n         {/* First Page */}\r\n         {currentPage > 1 && (\r\n            <button onClick={() => updateUsersPage(1)}>\r\n               <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  style={{ fill: \"#fff\", transform: \"rotate(-90deg)\" }}\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n               >\r\n                  <path d=\"m12 6.414 7.293 7.293 1.414-1.414L12 3.586l-8.707 8.707 1.414 1.414L12 6.414z\" />\r\n                  <path d=\"m3.293 18.293 1.414 1.414L12 12.414l7.293 7.293 1.414-1.414L12 9.586l-8.707 8.707z\" />\r\n               </svg>\r\n            </button>\r\n         )}\r\n         <div className={classes.pagination__pages}>\r\n            {/* Previous Portion */}\r\n            {currentPortion > 1 && (\r\n               <button\r\n                  onClick={() => updateUsersPage(leftPortionPageNumber - 1)}\r\n               >\r\n                  <svg\r\n                     style={{ fill: \"#fff\", transform: \"rotate(180deg)\" }}\r\n                     xmlns=\"http://www.w3.org/2000/svg\"\r\n                     width=\"24\"\r\n                     height=\"24\"\r\n                  >\r\n                     <path d=\"M7.293 4.707 14.586 12l-7.293 7.293 1.414 1.414L17.414 12 8.707 3.293 7.293 4.707z\" />\r\n                  </svg>\r\n               </button>\r\n            )}\r\n\r\n            {/* Page Numbers */}\r\n            {pages\r\n               .filter(\r\n                  (p) =>\r\n                     p >= leftPortionPageNumber && p <= rightPortionPageNumber\r\n               )\r\n               .map((p) => (\r\n                  <button\r\n                     key={p}\r\n                     className={`${classes.pageButton} ${\r\n                        currentPage === p ? classes.active : \"\"\r\n                     }`}\r\n                     onClick={() => updateUsersPage(p)}\r\n                  >\r\n                     {p}\r\n                  </button>\r\n               ))}\r\n\r\n            {/* Next Portion */}\r\n            {currentPortion < portionCount && (\r\n               <button\r\n                  onClick={() => updateUsersPage(rightPortionPageNumber + 1)}\r\n               >\r\n                  <svg\r\n                     style={{ fill: \"#fff\" }}\r\n                     xmlns=\"http://www.w3.org/2000/svg\"\r\n                     width=\"24\"\r\n                     height=\"24\"\r\n                  >\r\n                     <path d=\"M7.293 4.707 14.586 12l-7.293 7.293 1.414 1.414L17.414 12 8.707 3.293 7.293 4.707z\" />\r\n                  </svg>\r\n               </button>\r\n            )}\r\n         </div>\r\n\r\n         {/* Last Page */}\r\n         {currentPage < pagesCount && (\r\n            <button onClick={() => updateUsersPage(pagesCount)}>\r\n               <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  style={{ fill: \"#fff\", transform: \"rotate(90deg)\" }}\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n               >\r\n                  <path d=\"m12 6.414 7.293 7.293 1.414-1.414L12 3.586l-8.707 8.707 1.414 1.414L12 6.414z\" />\r\n                  <path d=\"m3.293 18.293 1.414 1.414L12 12.414l7.293 7.293 1.414-1.414L12 9.586l-8.707 8.707z\" />\r\n               </svg>\r\n            </button>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Pagination;\r\n","import classes from './Users.module.scss';\r\nimport User from './User/User';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport Pagination from '../Common/Pagination/Pagination';\r\n\r\nexport default function Users(props) {\r\n   let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n   let usersComponents = props.users.map((user) => (\r\n      <User\r\n         name={user.name}\r\n         key={user.id}\r\n         id={user.id}\r\n         avatar={user.photos.small || props.avatar}\r\n         status={user.status}\r\n         followed={user.followed}\r\n         followingInLoad={props.followingInProgress}\r\n         toggleFollowing={props.toggleFollowing}\r\n         toggleFollow={props.followUserThunk}\r\n      />\r\n   ));\r\n   return (\r\n      <section className={classes.users}>\r\n         <div className={classes.users__top}>\r\n            <h2 className={classes.users__title}>Пользователи</h2>\r\n         </div>\r\n         <div className={classes.users__searchBlock}>\r\n            <input className={classes.users__search} type=\"text\" name=\"\" id=\"\" />\r\n         </div>\r\n         <div className={classes.users__pagination}>\r\n            <Pagination\r\n               className={classes.users__pagination}\r\n               updateUsersPage={props.updateUsersPage}\r\n               currentPage={props.currentPage}\r\n               pagesCount={pagesCount}\r\n               paginationLength={props.pageSize}\r\n            />\r\n         </div>\r\n         <div className={classes.users__content}>\r\n            {props.isFetching ? <Preloader color=\"green\" /> : <ul className={classes.users__list}>{usersComponents}</ul>}\r\n         </div>\r\n      </section>\r\n   );\r\n}\r\n","export const getUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from 'react';\r\nimport Users from './Users.jsx';\r\nimport { connect } from 'react-redux';\r\nimport Avatar from '../../img/Avatar.jpg';\r\nimport { toggleFollow, changePage, toggleFollowing, getUsersPage, followUserThunk } from '../../redux/UsersReducer.js';\r\nimport { getUsers, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from '../../redux/selectors/users-selectors.js';\r\n\r\nclass UsersContainer extends React.Component {\r\n   componentDidMount() {\r\n      this.props.getUsersPage(this.props.currentPage, this.props.pageSize);\r\n   }\r\n\r\n   updateUsersPage = (p) => {\r\n      this.props.getUsersPage(p, this.props.pageSize);\r\n   };\r\n\r\n   render() {\r\n      return <Users {...this.props} updateUsersPage={this.updateUsersPage} />;\r\n   }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      users: getUsers(state),\r\n      pageSize: getPageSize(state),\r\n      totalUsersCount: getTotalUsersCount(state),\r\n      currentPage: getCurrentPage(state),\r\n      isFetching: getIsFetching(state),\r\n      followingInProgress: getFollowingInProgress(state),\r\n      avatar: Avatar,\r\n   };\r\n};\r\n\r\nexport default connect(mapStateToProps, { toggleFollow, changePage, toggleFollowing, getUsersPage, followUserThunk })(UsersContainer);\r\n"],"names":["User","_ref","id","avatar","name","status","toggleFollow","followed","followingInLoad","_jsxs","className","classes","user","children","_jsx","user__visual","user__picture","NavLink","to","concat","src","alt","user__description","user__descriptionBlock","user__name","user__status","Button","onClick","disabled","some","userId","class","button","follow","updateUsersPage","currentPage","pagesCount","paginationLength","pages","i","push","portionSize","portionCount","Math","ceil","currentPortion","leftPortionPageNumber","rightPortionPageNumber","xmlns","style","fill","transform","width","height","d","filter","p","map","Users","props","totalUsersCount","pageSize","usersComponents","users","photos","small","followingInProgress","toggleFollowing","followUserThunk","type","Pagination","isFetching","Preloader","color","getUsers","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","React","constructor","arguments","this","getUsersPage","componentDidMount","render","_objectSpread","connect","Avatar","changePage"],"sourceRoot":""}