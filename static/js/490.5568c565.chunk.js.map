{"version":3,"file":"static/js/490.5568c565.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Messages/DialogWindow/Message/Message.module.scss?f3eb","components/Messages/DialogWindow/Message/Message.jsx","webpack://my-app/./src/components/Messages/DialogWindow/DialogWindow.module.scss?ba8d","components/Messages/DialogWindow/DialogWindowContainer.jsx","components/Messages/DialogWindow/DialogWindow.jsx","webpack://my-app/./src/components/Messages/Messages.module.scss?b126","webpack://my-app/./src/components/Messages/Persons/Persons.module.scss?0abd","components/Messages/Persons/Person/Person.jsx","components/Messages/Persons/PersonsContainer.jsx","components/Messages/Persons/Persons.jsx","components/Messages/Messages.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__9wS9O\",\"message__author\":\"Message_message__author__Is0f+\",\"message__time\":\"Message_message__time__aig14\",\"message__image\":\"Message_message__image__7Udd8\",\"message__text\":\"Message_message__text__nayxd\",\"user\":\"Message_user__77AXe\"};","import classes from \"./Message.module.scss\";\r\n\r\nexport default function Message(props) {\r\n\r\n   return (\r\n      <div className={`${classes.message} ${classes[props.addonClass]}`}>\r\n         <div className={classes.message__image}>\r\n            <img src={props.Avatar} alt=\"author-pic\" />\r\n         </div>\r\n         <div className={classes.message__text}>\r\n            <p className={classes.message__author}>{props.addonClass === \"user\" ? \"Me\" : \"Andrew\"}</p>\r\n            <p className={classes.message__content}>\r\n               {props.children}\r\n            </p>\r\n            <p className={classes.message__time}>{props.time}</p>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialog_window\":\"DialogWindow_dialog_window__TZb1H\",\"dialog_window__wrapper\":\"DialogWindow_dialog_window__wrapper__jS6zK\",\"dialog\":\"DialogWindow_dialog__1Ij+K\",\"dialog__interface\":\"DialogWindow_dialog__interface__MMDPZ\",\"dialog__input\":\"DialogWindow_dialog__input__q0LHL\",\"dialog__button\":\"DialogWindow_dialog__button__jSriQ\"};","import DialogWindow from \"./DialogWindow.jsx\";\r\n\r\nimport {\r\n   sendNewMessage,\r\n} from \"../../../redux/MessagesReducer.js\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport Avatar from \"../../../img/Avatar.jpg\";\r\nimport SendImage from \"../../../img/ic_send_128_28719.png\";\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      messageMassive: state.messagesPage.messageMassive,\r\n      messageText: state.messagesPage.messageText,\r\n      avatar: Avatar,\r\n      sendImage: SendImage,\r\n   };\r\n};\r\n\r\n\r\n\r\nconst DialogWindowContainer = connect(mapStateToProps, {sendNewMessage})(DialogWindow);\r\n\r\nexport default DialogWindowContainer;\r\n","import Message from \"./Message/Message.jsx\";\r\nimport {useForm} from 'react-hook-form';\r\nimport classes from \"./DialogWindow.module.scss\";\r\n\r\n\r\nexport default function DialogWindow(props) {\r\n\r\n   const {register, handleSubmit, resetField} = useForm();\r\n\r\n   const dialogComponents = props.messageMassive.map((message) => (\r\n      <Message\r\n         key={message.id}\r\n         addonClass={message.isUser ? \"user\" : \"\"}\r\n         Avatar={props.avatar}\r\n         time = {message.time}\r\n      >  \r\n         {message.message}\r\n      </Message>\r\n   ));\r\n\r\n   function onSubmit(data){\r\n      props.sendNewMessage(data.message);\r\n      resetField(\"message\")\r\n   }\r\n   return (\r\n      <div className={classes.dialog}>\r\n         <div className={classes.dialog_window}>\r\n            <div className={classes.dialog_window__wrapper}>\r\n               {dialogComponents}\r\n            </div>\r\n         </div>\r\n         <div className={classes.dialog__interface}>\r\n            <form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)} className={classes.dialog__sending}>\r\n               <input\r\n                  {...register(\"message\", {required: true})}\r\n                  placeholder=\"Сообщение...\"\r\n                  type=\"text\"\r\n                  className={classes.dialog__input}\r\n               />\r\n               <button className={classes.dialog__button}>\r\n                  <img src={props.sendImage} alt=\"send\" />\r\n               </button>\r\n            </form>\r\n            \r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"Messages_messages__a4KmD\",\"messages__wrapper\":\"Messages_messages__wrapper__0Ympf\"};","// extracted by mini-css-extract-plugin\nexport default {\"people\":\"Persons_people__AlLgc\",\"people__list\":\"Persons_people__list__ZVV1t\",\"people__item\":\"Persons_people__item__Bif96\",\"active\":\"Persons_active__IRVs9\",\"people__window\":\"Persons_people__window__QB+VS\",\"people__wrapper\":\"Persons_people__wrapper__afAEf\",\"people__title\":\"Persons_people__title__yu9zI\"};","import { NavLink } from 'react-router';\r\n\r\nexport default function Person({ id, name, className }) {\r\n   return (\r\n      <li className={className}>\r\n         <NavLink to={`/dialogs/${id}_${name}`}>{name}</NavLink>\r\n      </li>\r\n   );\r\n}\r\n","import Persons from \"./Persons\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        personInfo: state.messagesPage.personInfo,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        default: \"none\",\r\n    }\r\n}\r\nconst PersonsContainer = connect(mapStateToProps, mapDispatchToProps)(Persons)\r\n\r\nexport default PersonsContainer;","import classes from \"./Persons.module.scss\";\r\nimport Person from \"./Person/Person\";\r\n\r\nexport default function Persons(props) {\r\n    const personComponents = props.personInfo.map((person) => (\r\n      <Person\r\n         key={person.id}\r\n         className={classes.people__item}\r\n         name={person.name}\r\n         id={person.id}\r\n      />\r\n   ));\r\n   return (\r\n      <div className={classes.people}>\r\n         <div className={classes.people__title}>Messages</div>\r\n         <div className={classes.people__window}>\r\n            <div className={classes.people__wrapper}>\r\n               <ul className={classes.people__list}>{personComponents}</ul>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n","import DialogWindowContainer from \"./DialogWindow/DialogWindowContainer.jsx\";\r\nimport classes from \"./Messages.module.scss\";\r\n\r\nimport PersonsContainer from \"./Persons/PersonsContainer.jsx\";\r\nimport WithAuthRedirect from \"../../HOC/WithAuthRedirect.jsx\";\r\n\r\nfunction Messages(props) {\r\n   return (\r\n      <section className={classes.messages}>\r\n         <PersonsContainer />\r\n         <DialogWindowContainer />\r\n      </section>\r\n   );\r\n}\r\n\r\n\r\n\r\nexport default WithAuthRedirect(Messages);\r\n"],"names":["Message","props","_jsxs","className","concat","classes","message","addonClass","children","_jsx","message__image","src","Avatar","alt","message__text","message__author","message__content","message__time","time","connect","state","messageMassive","messagesPage","messageText","avatar","sendImage","sendNewMessage","register","handleSubmit","resetField","useForm","dialogComponents","map","isUser","id","dialog","dialog_window","dialog_window__wrapper","dialog__interface","autoComplete","onSubmit","data","dialog__sending","_objectSpread","required","placeholder","type","dialog__input","dialog__button","Person","_ref","name","NavLink","to","personInfo","dispatch","default","personComponents","person","WithAuthRedirect","PersonsContainer","DialogWindowContainer"],"sourceRoot":""}